
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Basic HTML Structure</title>
    <!-- Add your CSS files or styles here -->
    <link rel="stylesheet" href="styles.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
      <!-- Bootstrap Icons -->
      <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Minified Chart.js -->
    <link rel="stylesheet" href="/css/styles.css">

    <style>
  
/* Query Action Button */
/* Query Action Button - adjusted positioning */
.query-action {
  position: relative; /* Changed from absolute */
  left: 0;
  z-index: 1000;
}


.query-action button {
    background-color:red; /* Teal color */
    border: none;
    color: white;
    padding: 4px 10px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 10px;
    z-index: 1000;
}

.query-action button:hover {
    background-color: #d11e1e; /* Darker teal on hover */
}
/* Base Header Styles */
.header {
  background: #003B4A;
  color: white;
  padding: 0.1rem 0.5rem; /* Almost no vertical padding */
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
  gap: 0.2rem; /* Minimal gap */
  line-height: 1; /* Prevents extra height from text */
  font-size: 0.9rem; /* Smaller text (adjust if needed) */
}
/* Logo Section */

/* Logo Section - fixed alignment */
.logo {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 1.1rem;
  font-weight: 600;
  color: orange;
  z-index: 1;
  margin-left: 0; /* Remove previous margin */
}
.logo i {
  font-size: 1.1rem;
}

/* User Controls - ensure proper spacing */
.user-controls {
  display: flex;
  align-items: center;
  gap: 15px;
  margin-left: auto; /* Push to the right */
  z-index: 1;
}

#currentUser {
  font-size: 0.9rem;
  white-space: nowrap;
}

.btn-danger {
  background: red;
  color: white;
  padding: 0.4rem 0.8rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.8rem;
  white-space: nowrap;
}

/* Menu Button */
.menu-button {
  background: #17a2b8;
  color: white;
  border: none;
  padding: 0.4rem 0.8rem;
  border-radius: 4px;
  cursor: pointer;
  font-size: 0.8rem;
  display: flex;
  align-items: center;
  gap: 0.3rem;
}

/* Responsive Adjustments */
@media (min-width: 769px) {
  .header {
    padding: 0.8rem 1.5rem;
  }
  .logo {
    font-size: 1.2rem;
    margin-left: 3rem;
  }
  .logo i {
    font-size: 1.2rem;
  }
  .btn-danger, 
  .menu-button {
    padding: 0.5rem 1rem;
    font-size: 0.9rem;
  }
}

/* Mobile Layout */
@media (max-width: 480px) {
  .header {
    padding: 0.6rem;
    gap: 0.5rem;
  }
  .logo {
    font-size: 1rem;
  }
  .user-controls {
    gap: 0.5rem;
  }
  #currentUser {
    display: none; /* Hide on smallest screens if needed */
  }
}
.header {
  display: flex !important; /* Ensures visibility */
}
/* Sidebar */
.query-sidebar {
    position: fixed;
    top: 0;
    left: -250px; /* Initially hidden */
    height: 100%;
    width: 250px;
    background-color: rgba(0, 0, 0, 0.9); /* Dark semi-transparent background */
    color: white;
    transition: left 0.3s ease;
    z-index: 900;
    padding-top: 60px;
    box-shadow: 2px 0 10px rgba(0, 0, 0, 0.5);
}

.query-sidebar.open {
    left: 0; /* Show sidebar */
}

.query-sidebar ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

.query-sidebar li {
    padding: 10px 20px;
    transition: background-color 0.3s ease;
}

.query-sidebar li:hover {
    background-color: rgba(255, 255, 255, 0.1); /* Hover effect */
}

.query-sidebar a {
    color: white;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 10px;
}

.query-sidebar a i {
    font-size: 18px;
}




 
    </style>
</head>
<body>
    <!-- Header Section -->
    <div class="header">
        <!-- Query Action Button -->
        <div class="query-action">
            <button class="btn btn-info" onclick="toggleSidebar()">Query Action</button>
        </div>
        <!-- Logo -->
        <div class="logo">
            <i class="bi bi-egg"></i> Layers
        </div>
        <!-- User Info and Logout -->
        <div>
            <span id="currentUser">Hello, User</span>
            <button class="btn btn-danger btn-sm" onclick="logout()">Logout</button>
        </div>
    </div>
    
    <!-- Sidebar -->
    <div id="querySidebar" class="query-sidebar">
        <ul>
          <li><a href="/dashboard"><i class="fas fa-home"></i> Home</a></li>

          <li><a href="/batch"><i class="fas fa-plus-circle"></i> Add Flock</a></li>
          <li><a href="/egg-production"><i class="fas fa-egg"></i> Record Egg Production</a></li>
      
          <li><a href="/financials"><i class="fas fa-dollar-sign"></i> Financials</a></li>
         
          <li><a href="/trial-balance"><i class="fas fa-cog"></i> Trial Balance</a></li>
          <li><a href="/balance-sheet"><i class="fas fa-download"></i> Balance Sheet Report</a></li>
          <li><a href="/supplier-payments"><i class="fas fa-exchange-alt"></i> Reconciliation</a></li>
      
          <li><a href="/visualization"><i class="fas fa-chart-line"></i> Visualization</a></li>
          <li><a href="/report"><i class="fas fa-file-alt"></i> Report</a></li>
      
          <li><a href="/record-death"><i class="fas fa-skull-crossbones"></i> Record Death</a></li>
 
      <li><a href="/v-m-v"><i class="fas fa-eye"></i> View Batch</a></li>

</li>

        </ul>
    </div>
    <div class="container my-5">
      <div class="card shadow-sm">
        <div class="card-body p-2 p-md-3">
          <form action="/batch" method="POST" id="batch-form-table">
            <div class="table-responsive">
              <table class="table table-bordered table-hover mb-0">
                <thead class="table-dark">
                  <tr>
                    <th class="text-nowrap" style="background-color: rgb(3, 64, 85); border-top-left-radius: 5px;"><i class="fas fa-hashtag me-1"></i> Batch No</th>
                    <th class="text-nowrap" style="background-color: rgb(3, 64, 85);"><i class="fas fa-dna me-1"></i> Breed</th>
                    <th class="text-nowrap" style="background-color: rgb(3, 64, 85);"><i class="fas fa-chicken me-1"></i> Total Number</th>
                    <th class="text-nowrap" style="background-color: rgb(3, 64, 85);"><i class="fas fa-calendar-week me-1"></i> Age</th>
                    <th class="text-nowrap" style="background-color: rgb(3, 64, 85); border-top-right-radius: 5px;"><i class="far fa-calendar-alt me-1"></i> Date</th>
                  </tr>
                </thead>
                
                <tbody>
                  <tr>
                    <td class="align-middle" data-label="Batch No">
                      <input type="text" name="batchNo" class="form-control form-control-sm" value="<%= batchNo %>" readonly />
                    </td>
                    <td class="align-middle" data-label="Breed">
                      <input type="text" name="grade" class="form-control form-control-sm" placeholder="Enter breed" required />
                    </td>
                    <td class="align-middle" data-label="Total Number">
                      <input type="number" name="totalNumber" class="form-control form-control-sm" placeholder="Total" required />
                    </td>
                    <td class="align-middle" data-label="Age">
                      <input type="number" name="age" class="form-control form-control-sm" placeholder="Age in weeks" required />
                    </td>
                    <td class="align-middle" data-label="Date">
                      <input type="date" name="date" class="form-control form-control-sm" required />
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
            
            <div class="text-end mt-3">
              <button type="submit" class="btn btn-primary btn-sm">
                <i class="fas fa-save me-1"></i> Save Batch
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
    
    <style>
   .table thead th {
  background-color: rgb(3, 64, 85);
  color: white;
  padding: 10px 12px;
  text-align: center;
  border: none;
  white-space: nowrap;
}

/* Rounded corners */
.table thead tr:first-child th:first-child {
  border-top-left-radius: 5px;
}
.table thead tr:first-child th:last-child {
  border-top-right-radius: 5px;
}

/* Default table styles (desktop) */
.table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  /* ❌ removed min-width: 600px */
}

.table tbody td {
  padding: 8px 10px;
  vertical-align: middle;
  border: none;
}

/* Mobile responsive styles */
@media (max-width: 768px) {
  .table-responsive {
    overflow-x: hidden !important; /* force no scrolling */
  }

  .table {
    display: block;
    width: 100%;
    min-width: 100% !important; /* ✅ fix */
  }

  .table thead {
    display: none;
  }

  .table tbody tr {
    display: block;
    margin-bottom: 1rem;
    padding: 0.75rem;
    border: 1px solid #dee2e6;
    border-radius: 0.5rem;
    background: #f8f9fa;
  }

  .table tbody td {
    display: flex;
    align-items: center;
    padding: 0.5rem 0;
    border: none !important;
    word-break: break-word; /* ✅ wrap long content */
  }

  .table tbody td::before {
    content: attr(data-label);
    flex: 0 0 40%;
    font-weight: bold;
    font-size: 0.85rem;
    color: #495057;
    padding-right: 1rem;
  }

  .table tbody td > * {
    flex: 1;
  }

  /* Hide icons on mobile */
  .table thead th i {
    display: none;
  }
}

    </style>
<section class="container-fluid px-lg-4 py-3">
  <!-- Header Section -->
  <div class="d-flex flex-column flex-md-row justify-content-between align-items-stretch align-items-md-center gap-3 mb-3">
    <h2 class="h5 mb-0 d-flex align-items-center">
      <i class="fas fa-dove text-primary me-2"></i>
      <span class="d-none d-sm-inline">Current Flock Management</span>
      <span class="d-inline d-sm-none">Flocks</span>
    </h2>
    
    <!-- Controls Container -->
    <div class="d-flex flex-column flex-sm-row gap-2 w-100 w-md-auto">
      <!-- Batch Filter -->
      <div class="flex-grow-1">
        <div class="input-group input-group-sm">
          <span class="input-group-text bg-light border-end-0"><i class="fas fa-filter text-muted"></i></span>
          <select class="form-select form-select-sm border-start-0" id="batchFilter">
            <option value="all">All Batches</option>
            <% if (batches && batches.length) { %>
              <% batches.forEach(batch => { %>
                <option value="<%= batch._id %>">
                  <%= batch.batchNo %> (<%= batch.currentCount %>/<%= batch.totalNumber %>)
                </option>
              <% }); %>
            <% } %>
          </select>
        </div>
      </div>
      
      <!-- Search -->
      <div class="flex-grow-1">
        <div class="input-group input-group-sm">
          <input type="text" id="eggSearchInput" class="form-control form-control-sm" placeholder="Search...">
          <button class="btn btn-sm btn-outline-secondary" type="button">
            <i class="fas fa-search"></i>
          </button>
        </div>
      </div>
      
      <!-- Date Filter -->
      <div class="flex-grow-1 position-relative">
        <div class="input-group input-group-sm">
          <span class="input-group-text bg-light"><i class="fas fa-calendar text-muted"></i></span>
          <select id="dateFilter" class="form-select form-select-sm">
            <option value="all">All Dates</option>
            <option value="today">Today</option>
            <option value="yesterday">Yesterday</option>
            <option value="week">This Week</option>
            <option value="lastweek">Last Week</option>
            <option value="month">This Month</option>
            <option value="lastmonth">Last Month</option>
            <option value="year">This Year</option>
            <option value="custom">Custom Range</option>
          </select>
        </div>
        
        <!-- Enhanced Date Picker (hidden by default) -->
        <div id="customDateContainer" class="card position-absolute start-0 end-0 mt-1 z-3 shadow-sm" style="display: none;">
          <div class="card-body p-2">
            <div class="d-flex flex-column flex-sm-row gap-2">
              <div class="flex-grow-1">
                <label class="small text-muted mb-1">From</label>
                <input type="date" id="customDateStart" class="form-control form-control-sm">
              </div>
              <div class="flex-grow-1">
                <label class="small text-muted mb-1">To</label>
                <input type="date" id="customDateEnd" class="form-control form-control-sm">
              </div>
              <div class="d-flex align-items-end">
                <button id="applyDateRange" class="btn btn-sm btn-primary">
                  <i class="fas fa-check"></i>
                </button>
              </div>
            </div>
            
            <!-- Quick Presets for Mobile -->
            <div class="d-flex d-sm-none flex-wrap gap-1 mt-2">
              <button class="btn btn-sm btn-outline-secondary date-preset" data-days="7">Last 7 Days</button>
              <button class="btn btn-sm btn-outline-secondary date-preset" data-days="30">Last 30 Days</button>
              <button class="btn btn-sm btn-outline-secondary date-preset" data-month="0">This Month</button>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Rows Selector -->
      <div class="flex-grow-1" style="min-width: 120px;">
        <div class="input-group input-group-sm">
          <span class="input-group-text bg-light"><i class="fas fa-list text-muted"></i></span>
          <select id="rowsPerPage" class="form-select form-select-sm">
            <option value="5">5 rows</option>
            <option value="10" selected>10 rows</option>
            <option value="20">20 rows</option>
            <option value="50">50 rows</option>
            <option value="all">All</option>
          </select>
        </div>
      </div>
    </div>
  </div>

  <!-- Table Card -->
  <div class="card border-0 shadow-sm mb-3">
    <div class="card-body p-0">
      <!-- Desktop Table (shown on md and up) -->
      <div class="d-none d-md-block">
        <div class="table-responsive">
          <table class="table table-hover align-middle mb-0">
            <thead class="bg-light">
              <tr>
                <th width="50">#</th>
                <th><i class="fas fa-hashtag fa-fw me-1 text-muted"></i>Batch</th>
                <th><i class="fas fa-star fa-fw me-1 text-muted"></i>Breed</th>
                <th><i class="fas fa-hourglass-half fa-fw me-1 text-muted"></i>Age</th>
                <th><i class="fas fa-boxes fa-fw me-1 text-muted"></i>Count</th>
                <th><i class="fas fa-calendar-alt fa-fw me-1 text-muted"></i>Date</th>
                <th width="120">Actions</th>
              </tr>
            </thead>
            <tbody>
              <% if (batches && batches.length > 0) { %>
                <% batches.forEach((batch, index) => { %>
                  <tr data-batch-id="<%= batch._id %>" data-date="<%= batch.creationDate ? batch.creationDate.toISOString().split('T')[0] : '' %>">
                    <td class="text-muted"><%= index + 1 %></td>
                    <td><span class="fw-semibold"><%= batch.batchNo %></span></td>
                    <td><span class="badge bg-primary bg-opacity-10 text-primary"><%= batch.grade %></span></td>
                    <td>
                      <div class="d-flex align-items-center gap-2">
                        <div class="progress flex-grow-1" style="height: 6px;">
                          <div class="progress-bar bg-warning" style="width: <%= Math.min(100, (batch.currentAgeWeeks / 52) * 100) %>%"></div>
                        </div>
                        <span><%= batch.currentAgeWeeks %>w</span>
                      </div>
                    </td>
                    <td>
                      <span class="fw-medium"><%= batch.currentCount %></span>
                      <span class="text-muted small">/ <%= batch.totalNumber %></span>
                    </td>
                    <td class="text-muted small">
                      <%= batch.creationDate ? batch.creationDate.toISOString().split('T')[0] : 'N/A' %>
                    </td>
                    <td>
                      <div class="d-flex gap-1">
                        <button class="btn btn-sm btn-outline-primary rounded-circle p-1" onclick="editBatch('<%= batch._id %>')">
                          <i class="fas fa-pencil-alt fa-fw"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger rounded-circle p-1" onclick="deleteBatch('<%= batch._id %>', this)">
                          <i class="fas fa-trash-alt fa-fw"></i>
                        </button>
                      </div>
                    </td>
                  </tr>
                <% }); %>
              <% } else { %>
                <tr>
                  <td colspan="7" class="text-center py-5 text-muted">
                    <i class="fas fa-dove fa-2x mb-3 opacity-25"></i>
                    <p class="mb-0">No batches found</p>
                  </td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>
      
      <!-- Mobile List (shown on sm and down) -->
      <div class="d-block d-md-none">
        <% if (batches && batches.length > 0) { %>
          <div class="list-group list-group-flush">
            <% batches.forEach((batch, index) => { %>
              <div class="list-group-item p-3" data-batch-id="<%= batch._id %>" data-date="<%= batch.creationDate ? batch.creationDate.toISOString().split('T')[0] : '' %>">
                <div class="d-flex justify-content-between align-items-center mb-2">
                  <span class="fw-bold text-primary"><%= batch.batchNo %></span>
                  <span class="badge bg-primary bg-opacity-10 text-primary"><%= batch.grade %></span>
                </div>
                
                <div class="row g-2 small">
                  <div class="col-6">
                    <div class="text-muted">Age</div>
                    <div>
                      <span class="me-2"><%= batch.currentAgeWeeks %> weeks</span>
                      <div class="progress d-inline-block" style="width: 60px; height: 4px;">
                        <div class="progress-bar bg-warning" style="width: <%= Math.min(100, (batch.currentAgeWeeks / 52) * 100) %>%"></div>
                      </div>
                    </div>
                  </div>
                  <div class="col-6">
                    <div class="text-muted">Count</div>
                    <div>
                      <span class="fw-medium"><%= batch.currentCount %></span>
                      <span class="text-muted">/ <%= batch.totalNumber %></span>
                    </div>
                  </div>
                  <div class="col-6">
                    <div class="text-muted">Date Added</div>
                    <div class="text-truncate">
                      <%= batch.creationDate ? batch.creationDate.toISOString().split('T')[0] : 'N/A' %>
                    </div>
                  </div>
                  <div class="col-6">
                    <div class="text-muted">Actions</div>
                    <div class="d-flex gap-1">
                      <button class="btn btn-sm btn-outline-primary rounded-circle p-1" onclick="editBatch('<%= batch._id %>')">
                        <i class="fas fa-pencil-alt fa-fw"></i>
                      </button>
                      <button class="btn btn-sm btn-outline-danger rounded-circle p-1" onclick="deleteBatch('<%= batch._id %>', this)">
                        <i class="fas fa-trash-alt fa-fw"></i>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <div class="text-center py-5 text-muted">
            <i class="fas fa-dove fa-2x mb-3 opacity-25"></i>
            <p class="mb-0">No batches found</p>
          </div>
        <% } %>
      </div>
    </div>
    
    <!-- Footer -->
    <% if (batches && batches.length > 0) { %>
      <div class="card-footer bg-light py-2">
        <div class="d-flex flex-column flex-sm-row justify-content-between align-items-center">
          <div class="small text-muted mb-2 mb-sm-0">
            Showing <span id="showingCount">1</span> to <span id="totalCount"><%= batches.length > 10 ? 10 : batches.length %></span> of <span id="totalRecords"><%= batches.length %></span>
          </div>
          <div class="d-flex gap-2">
            <button class="btn btn-sm btn-outline-secondary" id="prevPage" disabled>
              <i class="fas fa-chevron-left"></i>
            </button>
            <div class="btn-group" id="pageButtons">
              <button class="btn btn-sm btn-outline-secondary active">1</button>
              <% if (batches.length > 10) { %>
                <button class="btn btn-sm btn-outline-secondary">2</button>
              <% } %>
              <% if (batches.length > 20) { %>
                <button class="btn btn-sm btn-outline-secondary">3</button>
              <% } %>
            </div>
            <button class="btn btn-sm btn-outline-secondary" id="nextPage">
              <i class="fas fa-chevron-right"></i>
            </button>
          </div>
        </div>
      </div>
    <% } %>
  </div>
</section>

<style>
  /* Custom responsive styles */
  .table-responsive {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  /* Mobile list items */
  .list-group-item {
    border-left: 0;
    border-right: 0;
  }
  
  .list-group-item:first-child {
    border-top: 0;
  }
  
  .list-group-item:last-child {
    border-bottom: 0;
  }
  
  /* Progress bar in mobile view */
  .progress {
    background-color: #f0f3f5;
    min-width: 40px;
  }
  
  /* Date picker styling */
  #customDateContainer {
    width: 100%;
    max-width: 500px;
  }
  
  /* Responsive adjustments */
  @media (max-width: 576px) {
    .card-body {
      padding: 0;
    }
    
    .input-group {
      flex-wrap: nowrap;
    }
    
    .input-group .form-control,
    .input-group .form-select {
      min-width: 0;
      flex: 1 1 auto;
    }
    
    /* Stack controls vertically on very small screens */
    .d-flex.flex-sm-row {
      flex-direction: column !important;
    }
    
    .flex-grow-1 {
      width: 100%;
    }
    
    /* Make date presets full width on mobile */
    .date-preset {
      flex: 1 0 calc(50% - 0.5rem);
      min-width: calc(50% - 0.5rem);
    }
  }
  
  @media (max-width: 768px) {
    .container-fluid {
      padding-left: 0.5rem;
      padding-right: 0.5rem;
    }
    
    .card {
      border-radius: 0;
      box-shadow: none;
      border: 1px solid #eee;
    }
    
    /* Adjust date picker for mobile */
    #customDateContainer {
      position: fixed !important;
      left: 10px !important;
      right: 10px !important;
      top: 50% !important;
      transform: translateY(-50%);
      z-index: 1050 !important;
    }
  }
  
  @media (min-width: 768px) and (max-width: 992px) {
    .table td, .table th {
      padding: 0.5rem;
    }
  }
</style>

<script>
document.addEventListener("DOMContentLoaded", function() {
  // Initialize tooltips
  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
  tooltipTriggerList.map(function (tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl);
  });

  // DOM elements
  const batchFilter = document.getElementById("batchFilter");
  const eggSearchInput = document.getElementById("eggSearchInput");
  const dateFilter = document.getElementById("dateFilter");
  const customDateContainer = document.getElementById("customDateContainer");
  const customDateStart = document.getElementById("customDateStart");
  const customDateEnd = document.getElementById("customDateEnd");
  const applyDateRange = document.getElementById("applyDateRange");
  const rowsPerPage = document.getElementById("rowsPerPage");
  const showingCount = document.getElementById("showingCount");
  const totalCount = document.getElementById("totalCount");
  const totalRecords = document.getElementById("totalRecords");
  const prevPage = document.getElementById("prevPage");
  const nextPage = document.getElementById("nextPage");
  const pageButtons = document.getElementById("pageButtons");
  
  // Pagination variables
  let currentPage = 1;
  let totalPages = 1;
  
  // Date calculation functions
  function getDateRange(filterValue) {
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    switch(filterValue) {
      case 'today':
        return {
          start: today,
          end: new Date(today.getTime() + 86400000) // +1 day
        };
      case 'yesterday':
        return {
          start: new Date(today.getTime() - 86400000),
          end: today
        };
      case 'week':
        const startOfWeek = new Date(today);
        startOfWeek.setDate(today.getDate() - today.getDay());
        const endOfWeek = new Date(startOfWeek);
        endOfWeek.setDate(startOfWeek.getDate() + 7);
        return {
          start: startOfWeek,
          end: endOfWeek
        };
      case 'lastweek':
        const startOfLastWeek = new Date(today);
        startOfLastWeek.setDate(today.getDate() - today.getDay() - 7);
        const endOfLastWeek = new Date(startOfLastWeek);
        endOfLastWeek.setDate(startOfLastWeek.getDate() + 7);
        return {
          start: startOfLastWeek,
          end: endOfLastWeek
        };
      case 'month':
        return {
          start: new Date(today.getFullYear(), today.getMonth(), 1),
          end: new Date(today.getFullYear(), today.getMonth() + 1, 1)
        };
      case 'lastmonth':
        return {
          start: new Date(today.getFullYear(), today.getMonth() - 1, 1),
          end: new Date(today.getFullYear(), today.getMonth(), 1)
        };
      case 'year':
        return {
          start: new Date(today.getFullYear(), 0, 1),
          end: new Date(today.getFullYear() + 1, 0, 1)
        };
      case 'custom':
        if (customDateStart.value && customDateEnd.value) {
          return {
            start: new Date(customDateStart.value),
            end: new Date(new Date(customDateEnd.value).getTime() + 86400000) // +1 day to include end date
          };
        }
        return null;
      default:
        return null;
    }
  }
  
  // Set default dates for custom range
  function setDefaultCustomDates() {
    const today = new Date();
    const oneWeekAgo = new Date();
    oneWeekAgo.setDate(today.getDate() - 7);
    
    customDateStart.valueAsDate = oneWeekAgo;
    customDateEnd.valueAsDate = today;
  }
  
  // Date filter event listener
  dateFilter.addEventListener("change", function() {
    if (this.value === 'custom') {
      setDefaultCustomDates();
      customDateContainer.style.display = 'block';
    } else {
      customDateContainer.style.display = 'none';
      filterRows();
    }
  });
  
  // Apply custom date range
  applyDateRange.addEventListener("click", function() {
    customDateContainer.style.display = 'none';
    filterRows();
  });
  
  // Close date picker when clicking outside
  document.addEventListener('click', function(event) {
    if (!customDateContainer.contains(event.target) && 
        event.target !== dateFilter && 
        !dateFilter.contains(event.target)) {
      customDateContainer.style.display = 'none';
    }
  });
  
  // Date presets for mobile
  document.querySelectorAll('.date-preset').forEach(button => {
    button.addEventListener('click', function() {
      const today = new Date();
      today.setHours(0, 0, 0, 0);
      
      if (this.dataset.days) {
        const days = parseInt(this.dataset.days);
        const startDate = new Date(today);
        startDate.setDate(today.getDate() - days);
        customDateStart.valueAsDate = startDate;
        customDateEnd.valueAsDate = today;
      } else if (this.dataset.month) {
        const monthOffset = parseInt(this.dataset.month);
        const startDate = new Date(today.getFullYear(), today.getMonth() + monthOffset, 1);
        const endDate = new Date(today.getFullYear(), today.getMonth() + monthOffset + 1, 0);
        customDateStart.valueAsDate = startDate;
        customDateEnd.valueAsDate = endDate;
      }
      
      dateFilter.value = 'custom';
      customDateContainer.style.display = 'none';
      filterRows();
    });
  });
  
  // Filter functionality
  function filterRows() {
    const selectedBatch = batchFilter.value;
    const searchValue = eggSearchInput.value.toLowerCase();
    const dateFilterValue = dateFilter.value;
    const dateRange = getDateRange(dateFilterValue);
    const rowsToShow = rowsPerPage.value === 'all' ? Infinity : parseInt(rowsPerPage.value);
    
    let visibleItems = [];
    
    // Filter desktop rows
    const desktopRows = document.querySelectorAll(".d-md-block tbody tr");
    desktopRows.forEach(row => {
      const batchId = row.getAttribute("data-batch-id");
      const rowText = row.textContent.toLowerCase();
      const rowDate = row.getAttribute("data-date");
      
      const matchesBatch = selectedBatch === "all" || batchId === selectedBatch;
      const matchesSearch = searchValue === "" || rowText.includes(searchValue);
      let matchesDate = true;
      
      if (dateRange && rowDate) {
        const itemDate = new Date(rowDate);
        matchesDate = itemDate >= dateRange.start && itemDate < dateRange.end;
      }
      
      if (matchesBatch && matchesSearch && matchesDate) {
        visibleItems.push({
          element: row,
          date: rowDate
        });
        row.style.display = "";
      } else {
        row.style.display = "none";
      }
    });
    
    // Filter mobile items
    const mobileItems = document.querySelectorAll(".d-md-none .list-group-item");
    mobileItems.forEach(item => {
      const batchId = item.getAttribute("data-batch-id");
      const itemText = item.textContent.toLowerCase();
      const itemDate = item.getAttribute("data-date");
      
      const matchesBatch = selectedBatch === "all" || batchId === selectedBatch;
      const matchesSearch = searchValue === "" || itemText.includes(searchValue);
      let matchesDate = true;
      
      if (dateRange && itemDate) {
        const itemDateObj = new Date(itemDate);
        matchesDate = itemDateObj >= dateRange.start && itemDateObj < dateRange.end;
      }
      
      if (matchesBatch && matchesSearch && matchesDate) {
        visibleItems.push({
          element: item,
          date: itemDate
        });
        item.style.display = "";
      } else {
        item.style.display = "none";
      }
    });
    
    // Update pagination
    updatePagination(visibleItems.length, rowsToShow);
    
    // Apply pagination
    applyPagination(visibleItems, rowsToShow);
  }
  
  // Update pagination controls
  function updatePagination(totalVisible, rowsPerPage) {
    totalPages = Math.ceil(totalVisible / rowsPerPage);
    totalRecords.textContent = totalVisible;
    
    // Update page buttons
    pageButtons.innerHTML = '';
    for (let i = 1; i <= totalPages; i++) {
      const btn = document.createElement('button');
      btn.className = `btn btn-sm btn-outline-secondary ${i === currentPage ? 'active' : ''}`;
      btn.textContent = i;
      btn.addEventListener('click', () => {
        currentPage = i;
        filterRows();
      });
      pageButtons.appendChild(btn);
    }
    
    // Update prev/next buttons
    prevPage.disabled = currentPage === 1;
    nextPage.disabled = currentPage === totalPages;
  }
  
  // Apply pagination to items
  function applyPagination(items, rowsPerPage) {
    const startIndex = (currentPage - 1) * rowsPerPage;
    const endIndex = startIndex + rowsPerPage;
    
    items.forEach((item, index) => {
      if (index >= startIndex && index < endIndex) {
        item.element.style.display = "";
      } else {
        item.element.style.display = "none";
      }
    });
    
    // Update showing counts
    showingCount.textContent = Math.min(startIndex + 1, items.length);
    totalCount.textContent = Math.min(endIndex, items.length);
  }
  
  // Pagination event listeners
  prevPage.addEventListener("click", () => {
    if (currentPage > 1) {
      currentPage--;
      filterRows();
    }
  });
  
  nextPage.addEventListener("click", () => {
    if (currentPage < totalPages) {
      currentPage++;
      filterRows();
    }
  });
  
  // Event listeners for filters
  batchFilter.addEventListener("change", filterRows);
  eggSearchInput.addEventListener("input", filterRows);
  rowsPerPage.addEventListener("change", function() {
    currentPage = 1;
    filterRows();
  });
  
  // Initialize
  setDefaultCustomDates();
  filterRows();
});
</script>
    <!-- Font Awesome for icons -->
    <script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>
    

    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

    <!-- JavaScript to Add Rows -->
    
    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>

<script>

 





        function toggleSidebar() {
    const sidebar = document.getElementById("querySidebar");
    const overlay = document.getElementById("overlay");
    sidebar.classList.toggle("open");
    overlay.classList.toggle("active");
}

// Close sidebar when clicking outside
document.getElementById("overlay").addEventListener("click", () => {
    toggleSidebar();
});

 
 



// Function to handle batch editing
function editBatch(batchId) {
    // Redirect to edit page with the batch ID
    window.location.href = `/batch/edit/${batchId}`;
}

// Function to handle batch deletion
function deleteBatch(batchId, buttonElement) {
    if (confirm('Are you sure you want to delete this batch? This action cannot be undone.')) {
        fetch(`/batch/${batchId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (response.ok) {
                // Remove the row from the table
                buttonElement.closest('.grid-row').remove();
                
                // Show success message
                alert('Batch deleted successfully');
                
                // Optional: Reload the page to refresh the list
                // window.location.reload();
            } else {
                alert('Failed to delete batch');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error deleting batch');
        });
    }
}
 
    </script>
</body>
</html>