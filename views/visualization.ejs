<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Batch Data Visualization</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free/js/all.min.js"></script>




<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome for Icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<!-- Custom CSS -->

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
<!-- Minified Chart.js -->
<link rel="stylesheet" href="/css/styles.css">
</head>
<style>




 
 
        .container {
            background: #f9f9f9;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            max-width: 1200px;
            margin: auto;
            color: #f9f9f9;
        }
        .card {
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 20px;
            transition: transform 0.3s ease;
        }
        .card:hover {
            transform: translateY(-10px); /* Hover effect */
        }
        h5 {
            font-size: 20px;
            font-weight: bold;
            color: #333;
        }
        .d-flex {
            gap: 20px;
            flex-wrap: wrap;
        }
        .card canvas {
            border-radius: 10px;
        }

           
        .chart-container {
            width: 100%;
            margin: 20px auto;
            padding: 20px;
            background-color: #222;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }

        canvas {
            max-width: 100%;
        }

        .buttons {
            margin-top: 15px;
        }

        .buttons button {
            background-color: #008CFF;
            color: white;
            border: none;
            padding: 10px 15px;
            margin: 5px;
            cursor: pointer;
            border-radius: 5px;
        }

        .buttons button:hover {
            background-color: #005f99;
        }

        .batch-info {
            background-color: #222;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .batch-info h4 {
            color: #008CFF;
            margin-bottom: 15px;
        }

        .info-item {
            margin-bottom: 10px;
        } 
    </style>
    


 













<body>
    <div class="header">
        <!-- Query Action Button -->
        <div class="query-action">
            <button class="btn btn-info" onclick="toggleSidebar()">Query Action</button>
        </div>
        <!-- Logo -->
        <div class="logo">
            <i class="bi bi-egg"></i> Layers
        </div>
        <!-- User Info and Logout -->
        <div>
            <span id="currentUser">Hello, User</span>
            <button class="btn btn-danger btn-sm" onclick="logout()">Logout</button>
        </div>
    </div>
    
    <!-- Sidebar -->
    <div id="querySidebar" class="query-sidebar">
        <ul>
            <li><a href="/dashboard"><i class="fas fa-home"></i> Home</a></li>
        <li><a href="/batch"><i class="fas fa-plus-circle"></i> Add Flock</a></li>
        <li><a href="/egg-production"><i class="fas fa-egg"></i> Record Egg Production</a></li>
        <li><a href="/financials"><i class="fas fa-dollar-sign"></i> Financials</a></li>
      
        <li><a href="/trial-balance"><i class="fas fa-cog"></i> Trial Balance</a></li>
        <li><a href="/balance-sheet"><i class="fas fa-download"></i> Balance Sheet Report</a></li>
        <li><a href="/supplier-payments"><i class="fas fa-exchange-alt"></i> Reconciliation</a></li>
        <li><a href="/visualization"><i class="fas fa-chart-line"></i> Visualization</a></li>
    <li><a href="/report"><i class="fas fa-file-alt"></i> Report</a></li>

    <li><a href="/record-death"><i class="fas fa-skull-crossbones"></i> Record Death</a></li>
        </ul>
    </div>
    <div class="container">
        <h2 class="text-center mb-4">Egg Production & Financial Dashboard</h2>

        <!-- Batch Selection -->
        <div class="row mb-4">
            <div class="col-md-6 mx-auto">
                <div class="input-group">
                    <input type="text" id="batchSearch" class="form-control" placeholder="Search Batch No...">
                    <select id="batchSelect" class="form-select">
                        <% if (batches.length > 0) { %>
                            <% batches.forEach(batch => { %>
                                <option value="<%= batch._id %>" 
                                    <%= selectedBatch && batch._id.equals(selectedBatch._id) ? 'selected' : '' %>>
                                    <%= batch.batchNo %>
                                </option>
                            <% }) %>
                        <% } else { %>
                            <option>No batches found</option>
                        <% } %>
                    </select>
                </div>
            </div>
        </div>

        <% if (selectedBatch) { %>
            <!-- Batch Information -->
            <div class="batch-info">
                <h4>Batch Details</h4>
                <div class="row">
                    <div class="col-md-3">
                        <div class="info-item">
                            <strong>Batch No:</strong> <%= selectedBatch.batchNo %>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="info-item">
                            <strong>Grade:</strong> <%= selectedBatch.grade %>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="info-item">
                            <strong>Total Birds:</strong> <%= selectedBatch.totalNumber %>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="info-item">
                            <strong>Age (days):</strong> <%= selectedBatch.age %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Time Period Selector -->
            <div class="buttons text-center mb-4">
                <button onclick="updateCharts('month')">Month</button>
                <button onclick="updateCharts('week')">Week</button>
                <button onclick="updateCharts('day')">Day</button>
            </div>

            <!-- Egg Production Chart -->
            <div class="chart-container">
                <h3>Egg Production Trend</h3>
                <canvas id="eggChart"></canvas>
            </div>

            <!-- Financial Chart -->
            <div class="chart-container">
                <h3>Financial Performance</h3>
                <canvas id="financialChart"></canvas>
            </div>
        <% } else { %>
            <div class="alert alert-info text-center">
                Please select a batch to view visualization
            </div>
        <% } %>
    </div>

    <script>
        // Initialize charts
        let eggChart, financialChart;
        
        <% if (selectedBatch) { %>
            // Prepare data from server
            const eggData = {
                labels: <%- JSON.stringify(eggGraph.map(e => e.date)) %>,
                data: <%- JSON.stringify(eggGraph.map(e => e.totalEggs)) %>
            };

            const financialData = {
                labels: <%- JSON.stringify(financialGraph.map(f => f.date)) %>,
                profit: <%- JSON.stringify(financialGraph.map(f => f.profit)) %>,
                income: <%- JSON.stringify(financialGraph.map(f => f.totalIncome)) %>,
                expenses: <%- JSON.stringify(financialGraph.map(f => f.totalExpenses)) %>
            };

            // Create Egg Production Chart
            const eggCtx = document.getElementById('eggChart').getContext('2d');
            eggChart = new Chart(eggCtx, {
                type: 'line',
                data: {
                    labels: eggData.labels,
                    datasets: [
                        {
                            label: 'Eggs Produced',
                            data: eggData.data,
                            borderColor: '#008CFF',
                            backgroundColor: 'transparent',
                            borderWidth: 2,
                            pointRadius: 5,
                            pointBackgroundColor: '#008CFF',
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false }
                    },
                    scales: {
                        x: { 
                            grid: { display: false },
                            ticks: { color: '#aaa' }
                        },
                        y: { 
                            grid: { color: '#333' }, 
                            beginAtZero: true,
                            ticks: { color: '#aaa' }
                        }
                    }
                }
            });

            // Create Financial Chart
            // Create Financial Chart - Combined Bar and Line Chart
const financialCtx = document.getElementById('financialChart').getContext('2d');
financialChart = new Chart(financialCtx, {
    type: 'bar',
    data: {
        labels: financialData.labels,
        datasets: [
            {
                label: 'Profit',
                data: financialData.profit,
                backgroundColor: function(context) {
                    return context.raw >= 0 ? 'rgba(0, 140, 255, 0.7)' : 'rgba(255, 99, 132, 0.7)';
                },
                borderColor: function(context) {
                    return context.raw >= 0 ? '#008CFF' : '#ff6384';
                },
                borderWidth: 1,
                borderRadius: 3,
                yAxisID: 'y'
            },
            {
                label: 'Income',
                data: financialData.income,
                borderColor: '#00C49F',
                backgroundColor: 'transparent',
                borderWidth: 2,
                pointRadius: 5,
                pointBackgroundColor: '#00C49F',
                tension: 0.3,
                type: 'line',
                yAxisID: 'y'
            },
            {
                label: 'Expenses',
                data: financialData.expenses,
                borderColor: '#FF8042',
                backgroundColor: 'transparent',
                borderWidth: 2,
                pointRadius: 5,
                pointBackgroundColor: '#FF8042',
                tension: 0.3,
                type: 'line',
                yAxisID: 'y'
            }
        ]
    },
    options: {
        responsive: true,
        interaction: {
            mode: 'index',
            intersect: false
        },
        plugins: {
            legend: { 
                display: true,
                labels: { 
                    color: '#fff',
                    usePointStyle: true,
                    pointStyle: 'circle'
                }
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        return `${context.dataset.label}: ${context.raw.toLocaleString()}`;
                    }
                }
            }
        },
        scales: {
            x: { 
                grid: { display: false },
                ticks: { color: '#aaa' }
            },
            y: { 
                grid: { color: 'rgba(255, 255, 255, 0.1)' },
                ticks: { 
                    color: '#aaa',
                    callback: function(value) {
                        return value.toLocaleString();
                    }
                },
                beginAtZero: true
            }
        }
    }
});
            function updateCharts(timePeriod) {
                // In a real app, you would fetch new data based on time period
                // For now, we'll just simulate it with the existing data
                
                // For demo purposes - in a real app you would fetch new data
                eggChart.update();
                financialChart.update();
                
                // In a complete implementation, you would:
                // 1. Make an API call to get data for the selected period
                // 2. Update the chart data
                // 3. Call chart.update()
            }
        <% } %>

        // Batch search filter
        document.getElementById('batchSearch').addEventListener('input', function() {
            const filter = this.value.toLowerCase();
            const options = document.querySelectorAll('#batchSelect option');
            options.forEach(opt => {
                opt.hidden = !opt.textContent.toLowerCase().includes(filter);
            });
        });

        // Batch selector redirect
        document.getElementById('batchSelect').addEventListener('change', function() {
            const batchId = this.value;
            if (batchId) {
                window.location.href = '/visualization?batchId=' + batchId;
            }
        });
    </script>
    <script src="/js/scripts.js"></script>
</body>
</html>
