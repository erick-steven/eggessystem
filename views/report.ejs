<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Report Generation</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        .container {
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px !important;
            padding-top: 50px !important;
        }

        h2, h3, h5 {
            color: #2c3e50;
        }

        h2 {
            font-weight: bold;
            margin-bottom: 20px;
        }

        h2 i {
            margin-right: 10px;
            color: #3498db;
        }

        /* Form Styles */
        .form-container {
            display: flex;
            flex-wrap: wrap;
            gap: 12px;
            align-items: center;
            margin-bottom: 20px;
        }

        .form-group {
            flex: 1 1 auto;
            min-width: 150px;
            position: relative;
        }

        .search-group {
            position: relative;
            max-width: 250px;
        }

        .search-input {
            padding-left: 35px;
            width: 100%;
            border: 2px solid #bdc3c7;
            border-radius: 8px;
            padding: 10px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .search-input:focus {
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
        }

        .search-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #7f8c8d;
            z-index: 2;
        }

        .select-dropdown {
            width: 100%;
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 15px;
            border: 2px solid #bdc3c7;
            border-radius: 8px;
            padding: 10px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        .submit-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            white-space: nowrap;
            min-width: fit-content;
            background-color: #3498db;
            border: none;
            padding: 12px 24px;
            font-size: 16px;
            font-weight: 600;
            border-radius: 8px;
            transition: background-color 0.3s ease;
        }

        .submit-btn:hover {
            background-color: #2980b9;
        }

        /* Table Styles */
        .table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 30px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        .table th, .table td {
            padding: 12px 15px;
            text-align: left;
        }

        .table th {
            background-color: #2c3e50;
            color: #fff;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 14px;
        }

        .table tbody tr {
            border-bottom: 1px solid #ddd;
        }

        .table tbody tr:nth-of-type(even) {
            background-color: #f8f9fa;
        }

        .table tbody tr:last-of-type {
            border-bottom: 2px solid #2c3e50;
        }

        .table tbody tr:hover {
            background-color: #f1f1f1;
        }

        /* Analysis Row Styles */
        .analysis-row {
            background-color: #e9f5ff !important;
            font-size: 14px;
            color: #2c3e50;
        }

        /* Scrollable Table Container */
        .table-container {
            position: relative;
            overflow: hidden;
            margin: 20px 0;
            border-radius: 8px;
        }

        .table-wrapper {
            overflow-x: auto;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            margin: 0 40px;
            padding-bottom: 10px;
        }

        .table-wrapper::-webkit-scrollbar {
            display: none;
        }

        .scroll-button {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 36px;
            height: 36px;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 10;
            transition: all 0.3s ease;
            opacity: 0.9;
        }

        .scroll-button:hover {
            background-color: #2980b9;
            transform: translateY(-50%) scale(1.1);
            opacity: 1;
        }

        .scroll-button.left {
            left: 0;
        }

        .scroll-button.right {
            right: 0;
        }

        .scroll-button:disabled {
            background-color: #bdc3c7;
            cursor: not-allowed;
            transform: translateY(-50%);
            opacity: 0.5;
        }

        /* Death Reason Badges */
        .reason-badge {
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
        }

        .reason-Disease { background-color: #dc3545; color: white; }
        .reason-Predator { background-color: #6c757d; color: white; }
        .reason-Accident { background-color: #fd7e14; color: white; }
        .reason-Heat-Stress { background-color: #ffc107; color: #212529; }
        .reason-Cold-Stress { background-color: #0dcaf0; color: #212529; }
        .reason-Unknown { background-color: #6610f2; color: white; }
        .reason-Other { background-color: #20c997; color: #212529; }

        /* Recommendation Cards */
        .recommendation-card {
            border-left: 4px solid;
            margin-bottom: 15px;
        }
        .recommendation-Disease { border-left-color: #dc3545; }
        .recommendation-Predator { border-left-color: #6c757d; }
        .recommendation-Accident { border-left-color: #fd7e14; }
        .recommendation-Heat-Stress { border-left-color: #ffc107; }
        .recommendation-Cold-Stress { border-left-color: #0dcaf0; }
        .recommendation-Unknown { border-left-color: #6610f2; }
        .recommendation-Other { border-left-color: #20c997; }

        /* Date Range Filter Styles */
        .date-range-filter {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .date-range-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }
        
        .date-range-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }
        
        .date-range-inputs {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .date-input-group {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .date-input-group label {
            margin-bottom: 0;
            font-weight: 500;
        }
        
        .date-range-buttons {
            display: flex;
            gap: 10px;
        }
        
        .quick-range-btn {
            padding: 5px 10px;
            border-radius: 4px;
            background-color: #e9ecef;
            border: 1px solid #dee2e6;
            cursor: pointer;
            font-size: 14px;
        }
        
        .quick-range-btn:hover {
            background-color: #dee2e6;
        }
        
        .quick-range-btn.active {
            background-color: #3498db;
            color: white;
            border-color: #2980b9;
        }
        
        /* Hidden class for filtered elements */
        .filtered-out {
            display: none !important;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .form-container {
                flex-direction: column;
                align-items: stretch;
                gap: 15px;
            }

            .form-group, .search-group {
                max-width: 100% !important;
                width: 100%;
            }

            .submit-btn {
                width: 100%;
            }

            .btn-text {
                display: inline;
            }

            .table-wrapper {
                margin: 0 30px;
            }
            
            .scroll-button {
                width: 30px;
                height: 30px;
                font-size: 16px;
            }

            /* Date Range Filter Responsive */
            .date-range-inputs {
                flex-direction: column;
                gap: 10px;
            }
            
            .date-range-controls {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .date-range-buttons {
                margin-top: 10px;
            }
        }

        @media (max-width: 480px) {
            .btn-text {
                display: none;
            }

            .submit-btn {
                padding: 10px 15px;
            }

            .submit-btn i {
                margin-right: 0;
            }

            .table th, .table td {
                padding: 8px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <!-- Header -->
    <div class="header">
        <!-- Query Action Button -->
        <div class="query-action">
            <button class="btn btn-info" onclick="toggleSidebar()">Query Action</button>
        </div>
        <!-- Logo -->
        <div class="logo">
            <i class="bi bi-egg"></i> Layers
        </div>
        <!-- User Info and Logout -->
        <div>
            <span id="currentUser">Hello, User</span>
            <button class="btn btn-danger btn-sm" onclick="logout()">Logout</button>
        </div>
    </div>
    
    <!-- Sidebar -->
    <div id="querySidebar" class="query-sidebar">
        <ul>
            <li><a href="/dashboard"><i class="fas fa-home"></i> Home</a></li>
            <li><a href="/batch"><i class="fas fa-plus-circle"></i> Add Flock</a></li>
            <li><a href="/egg-production"><i class="fas fa-egg"></i> Record Egg Production</a></li>
            <li><a href="/financials"><i class="fas fa-dollar-sign"></i> Financials</a></li>
            <li><a href="/trial-balance"><i class="fas fa-cog"></i> Trial Balance</a></li>
            <li><a href="/balance-sheet"><i class="fas fa-download"></i> Balance Sheet Report</a></li>
            <li><a href="/supplier-payments"><i class="fas fa-exchange-alt"></i> Reconciliation</a></li>
            <li><a href="/visualization"><i class="fas fa-chart-line"></i> Visualization</a></li>
            <li><a href="/report"><i class="fas fa-file-alt"></i> Report</a></li>
            <li><a href="/record-death"><i class="fas fa-skull-crossbones"></i> Record Death</a></li>
        </ul>
    </div>
    
    <!-- Main Content -->
    <div class="container my-5">
        <h2><i class="fas fa-file-alt"></i> Batch Report</h2>
      
        <form action="/report" method="GET" id="reportForm">
            <div class="form-container">
                <!-- Search input -->
                <div class="form-group search-group">
                    <input type="text" id="searchInput" class="form-control search-input" 
                           placeholder="Search Batch Number..." onkeyup="filterBatches()">
                    <i class="fas fa-search search-icon"></i>
                </div>
                
                <!-- Batch Dropdown -->
                <div class="form-group">
                    <select name="batch" class="form-control select-dropdown" id="batchDropdown">
                        <option value="">Select Batch</option>
                        <% allBatches.forEach(b => { %>
                            <option value="<%= b._id %>" <%= selectedBatchId == b._id ? 'selected' : '' %>>
                                <%= b.batchNo %>
                            </option>
                        <% }) %>
                    </select>
                </div>
                
                <!-- Submit button -->
                <button class="btn btn-primary submit-btn" type="submit">
                    <i class="fas fa-search"></i> <span class="btn-text">Generate Report</span>
                </button>
            </div>
        </form>
        
        <% if (selectedBatch) { %>
            <!-- Date Range Filter -->
            <div class="date-range-filter">
                <div class="date-range-header">
                    <h5 class="mb-0">Filter Data by Date Range</h5>
                    <div class="date-range-controls">
                        <div class="date-range-inputs">
                            <div class="date-input-group">
                                <label for="startDate">From:</label>
                                <input type="date" id="startDate" class="form-control">
                            </div>
                            <div class="date-input-group">
                                <label for="endDate">To:</label>
                                <input type="date" id="endDate" class="form-control">
                            </div>
                        </div>
                        <div class="date-range-buttons">
                            <button type="button" class="quick-range-btn" data-days="7">Last 7 Days</button>
                            <button type="button" class="quick-range-btn" data-days="30">Last 30 Days</button>
                            <button type="button" class="quick-range-btn" data-days="90">Last 90 Days</button>
                            <button type="button" class="quick-range-btn active" data-range="all">All Time</button>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-end mt-2">
                    <button id="applyDateRange" class="btn btn-sm btn-primary">Apply Filter</button>
                    <button id="resetDateRange" class="btn btn-sm btn-outline-secondary ms-2">Reset</button>
                </div>
            </div>

            <h3>Report for Batch: <%= selectedBatch.batchNo %></h3>
        
            <!-- Batch Details Section -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Batch Details</h5>
                </div>
                <div class="card-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Batch Number</th>
                                <th>Breed</th>
                                <th>Initial Age</th>
                                <th>Current Age</th>
                                <th>Initial Count</th>
                                <th>Current Count</th>
                                <th>Status</th>
                                <th>Creation Date</th>
                                <th>Last Update</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><%= selectedBatch.batchNo %></td>
                                <td><%= selectedBatch.grade %></td>
                                <td><%= selectedBatch.initialAgeWeeks %> weeks</td>
                                <td><%= selectedBatch.currentAgeWeeks %> weeks</td>
                                <td><%= selectedBatch.totalNumber %></td>
                                <td><%= selectedBatch.currentCount %></td>
                                <td><%= selectedBatch.status %></td>
                                <td><%= selectedBatch.creationDate.toDateString() %></td>
                                <td><%= selectedBatch.lastAgeUpdate.toDateString() %></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        
            <!-- Death Records Section -->
            <% if (selectedBatch.deathRecords && selectedBatch.deathRecords.length > 0) { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Death Records</h5>
                    </div>
                    <div class="card-body">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Count</th>
                                    <th>Reason</th>
                                    <th>Other Reason</th>
                                    <th>Notes</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% selectedBatch.deathRecords.forEach(record => { %>
                                    <tr class="date-filterable" data-date="<%= new Date(record.date).getTime() %>">
                                        <td><%= record.date.toDateString() %></td>
                                        <td><%= record.count %></td>
                                        <td>
                                            <% if (record.reason) { %>
                                                <span class="reason-badge reason-<%= record.reason.replace(' ', '-') %>">
                                                    <%= record.reason %>
                                                </span>
                                            <% } else { %>
                                                <span class="text-muted">Not specified</span>
                                            <% } %>
                                        </td>
                                        <td><%= record.otherReason || 'N/A' %></td>
                                        <td><%= record.notes || 'N/A' %></td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Death Analysis Section -->
                <div class="card mb-4">
                    <div class="card-header bg-info text-white">
                        <h5><i class="fas fa-chart-pie"></i> Death Analysis</h5>
                    </div>
                    <div class="card-body">
                        <% 
                            // Calculate death reasons statistics
                            const deathReasons = {};
                            let totalDeaths = 0;
                            
                            selectedBatch.deathRecords.forEach(record => {
                                const reason = record.reason || 'Unknown';
                                deathReasons[reason] = (deathReasons[reason] || 0) + record.count;
                                totalDeaths += record.count;
                            });
                            
                            // Sort by count descending
                            const sortedReasons = Object.entries(deathReasons)
                                .sort((a, b) => b[1] - a[1]);
                        %>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Death Reasons Breakdown</h6>
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Reason</th>
                                            <th>Count</th>
                                            <th>Percentage</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% sortedReasons.forEach(([reason, count]) => { %>
                                            <tr>
                                                <td>
                                                    <span class="reason-badge reason-<%= reason.replace(' ', '-') %>">
                                                        <%= reason %>
                                                    </span>
                                                </td>
                                                <td><%= count %></td>
                                                <td><%= ((count / totalDeaths) * 100).toFixed(1) %>%</td>
                                            </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-md-6">
                                <h6>Recommendations</h6>
                                <% if (totalDeaths > (selectedBatch.totalNumber * 0.05)) { %>
                                    <div class="alert alert-warning">
                                        <h6><i class="fas fa-exclamation-triangle"></i> High Mortality Rate (<%= ((totalDeaths / selectedBatch.totalNumber) * 100).toFixed(1) %>%)</h6>
                                        <p>Your mortality rate exceeds the recommended 5% threshold. Specific recommendations:</p>
                                        
                                        <% if (deathReasons['Disease']) { %>
                                            <div class="card recommendation-card recommendation-Disease mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Disease (<%= ((deathReasons['Disease'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Review vaccination schedule with your veterinarian</li>
                                                        <li>Implement stricter biosecurity measures (foot baths, disinfectants)</li>
                                                        <li>Isolate sick birds immediately to prevent spread</li>
                                                        <li>Consider water medication if appropriate for the disease</li>
                                                        <li>Test for common poultry diseases in your area</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <% if (deathReasons['Predator']) { %>
                                            <div class="card recommendation-card recommendation-Predator mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Predator Attack (<%= ((deathReasons['Predator'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Inspect housing daily for potential entry points</li>
                                                        <li>Install motion-activated lights or alarms</li>
                                                        <li>Use predator-proof fencing with buried edges</li>
                                                        <li>Consider guard animals (dogs, geese) if problem persists</li>
                                                        <li>Remove nearby cover that predators might use</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <% if (deathReasons['Accident']) { %>
                                            <div class="card recommendation-card recommendation-Accident mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Accident (<%= ((deathReasons['Accident'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Check for and remove any sharp edges in housing</li>
                                                        <li>Ensure proper spacing between equipment</li>
                                                        <li>Train staff on safe bird handling techniques</li>
                                                        <li>Implement safety checks for all equipment</li>
                                                        <li>Review housing design for potential hazards</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <% if (deathReasons['Heat Stress']) { %>
                                            <div class="card recommendation-card recommendation-Heat-Stress mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Heat Stress (<%= ((deathReasons['Heat Stress'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Increase ventilation with fans or open sides</li>
                                                        <li>Provide additional cool water sources</li>
                                                        <li>Install misting systems for extreme heat</li>
                                                        <li>Adjust feeding times to cooler parts of the day</li>
                                                        <li>Provide shade and reduce stocking density</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <% if (deathReasons['Cold Stress']) { %>
                                            <div class="card recommendation-card recommendation-Cold-Stress mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Cold Stress (<%= ((deathReasons['Cold Stress'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Improve insulation in housing</li>
                                                        <li>Provide supplemental heat sources</li>
                                                        <li>Ensure dry bedding is maintained</li>
                                                        <li>Protect from drafts while maintaining ventilation</li>
                                                        <li>Increase feed amounts during cold periods</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <% if (deathReasons['Unknown']) { %>
                                            <div class="card recommendation-card recommendation-Unknown mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Unknown Causes (<%= ((deathReasons['Unknown'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Implement more detailed record keeping</li>
                                                        <li>Consider necropsy for sudden unexplained deaths</li>
                                                        <li>Monitor closely for patterns in timing or symptoms</li>
                                                        <li>Consult with poultry health specialist</li>
                                                        <li>Review all management practices</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                        
                                        <% if (deathReasons['Other']) { %>
                                            <div class="card recommendation-card recommendation-Other mb-3">
                                                <div class="card-body">
                                                    <h6 class="card-title">Other Causes (<%= ((deathReasons['Other'] / totalDeaths) * 100).toFixed(1) %>%)</h6>
                                                    <ul class="mb-0">
                                                        <li>Review notes for specific details on these cases</li>
                                                        <li>Identify any common factors among "Other" deaths</li>
                                                        <li>Consider creating new categories for recurring issues</li>
                                                        <li>Document all observations thoroughly</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        <% } %>
                                    </div>
                                <% } else { %>
                                    <div class="alert alert-success">
                                        <h6><i class="fas fa-check-circle"></i> Normal Mortality Rate (<%= ((totalDeaths / selectedBatch.totalNumber) * 100).toFixed(1) %>%)</h6>
                                        <p>Your mortality rate is within acceptable limits. Maintenance recommendations:</p>
                                        
                                        <% if (deathReasons['Disease']) { %>
                                            <p class="mb-1"><strong>Disease Prevention:</strong> Continue current vaccination program and biosecurity measures.</p>
                                        <% } %>
                                        
                                        <% if (deathReasons['Predator']) { %>
                                            <p class="mb-1"><strong>Predator Control:</strong> Maintain existing predator deterrents and monitoring.</p>
                                        <% } %>
                                        
                                        <% if (deathReasons['Heat Stress'] || deathReasons['Cold Stress']) { %>
                                            <p class="mb-1"><strong>Environmental Management:</strong> Continue monitoring temperature and adjusting as needed.</p>
                                        <% } %>
                                        
                                        <p class="mt-2 mb-0">Regularly review your mortality patterns for any changes.</p>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <div class="alert alert-info">No death records found for this batch.</div>
            <% } %>
        
            <!-- Egg Production Section -->
            <% if (eggData && eggData.length > 0) { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Egg Production</h5>
                    </div>
                    <div class="card-body">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Total Eggs</th>
                                    <th>Good Eggs %</th>
                                    <th>Bad Eggs %</th>
                                    <th>Weight (kg)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% eggData.forEach(entry => { 
                                    // Calculate Egg Production Percentage
                                    const eggProductionPercentage = ((entry.totalEggs / selectedBatch.totalNumber) * 100).toFixed(2);
                
                                    // Determine Life Stage and Expected Values
                                    let lifeStage = "";
                                    let expectedWeightRange = "";
                                    let expectedEggProductionRange = "";
                                    if (selectedBatch.age <= 6) {
                                        lifeStage = "Chick (Brooding)";
                                        expectedWeightRange = "0.04–0.60 kg";
                                        expectedEggProductionRange = "No eggs";
                                    } else if (selectedBatch.age <= 16) {
                                        lifeStage = "Grower Stage";
                                        expectedWeightRange = "0.60–1.2 kg";
                                        expectedEggProductionRange = "No eggs";
                                    } else if (selectedBatch.age <= 20) {
                                        lifeStage = "Pre-laying Stage";
                                        expectedWeightRange = "1.3–1.5 kg";
                                        expectedEggProductionRange = "First eggs begin";
                                    } else if (selectedBatch.age <= 30) {
                                        lifeStage = "Peak Production";
                                        expectedWeightRange = "1.5–1.8 kg";
                                        expectedEggProductionRange = "85%–95%";
                                    } else if (selectedBatch.age <= 72) {
                                        lifeStage = "Laying Period";
                                        expectedWeightRange = "1.8–2.0 kg";
                                        expectedEggProductionRange = "80%–90%";
                                    } else {
                                        lifeStage = "Late Laying Stage";
                                        expectedWeightRange = "2.0–2.2 kg";
                                        expectedEggProductionRange = "60%–75%";
                                    }
                
                                    // Feedback based on comparison
                                    let feedback = "";
                                    if (entry.weight < parseFloat(expectedWeightRange.split("–")[0])) {
                                        feedback += "Weight is below expected. Review nutrition and health. ";
                                    } else if (entry.weight > parseFloat(expectedWeightRange.split("–")[1])) {
                                        feedback += "Weight is above expected. Monitor feed intake. ";
                                    } else {
                                        feedback += "Weight is within the expected range. ";
                                    }
                
                                    if (eggProductionPercentage < parseFloat(expectedEggProductionRange.split("–")[0])) {
                                        feedback += "Egg production is below expected. Check for stress, disease, or feed quality. ";
                                    } else if (eggProductionPercentage > parseFloat(expectedEggProductionRange.split("–")[1])) {
                                        feedback += "Egg production is above expected. Excellent performance! ";
                                    } else {
                                        feedback += "Egg production is within the expected range. ";
                                    }
                                %>
                                    <tr class="date-filterable" data-date="<%= new Date(entry.date).getTime() %>">
                                        <td><%= entry.date.toDateString() %></td>
                                        <td><%= entry.totalEggs %></td>
                                        <td><%= entry.goodEggsPercent %>%</td>
                                        <td><%= entry.badEggsPercent %>%</td>
                                        <td><%= entry.weight %> kg</td>
                                    </tr>
                                    <tr class="analysis-row">
                                        <td colspan="5">
                                            <strong>Analysis for <%= entry.date.toDateString() %>:</strong><br>
                                            - Life Stage: <%= lifeStage %><br>
                                            - Egg Production Percentage: <%= eggProductionPercentage %>%<br>
                                            - Expected Weight Range: <%= expectedWeightRange %><br>
                                            - Expected Egg Production Range: <%= expectedEggProductionRange %><br>
                                            - Feedback: <%= feedback %>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            <% } else { %>
                <div class="alert alert-info">No egg production data available for this batch.</div>
            <% } %>
        
            <!-- Financial Data Section -->
            <% if (financialData && financialData.length > 0) { %>
                <div class="card mb-4">
                    <div class="card-header">
                        <h5>Financial Records</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-container">
                            <button class="scroll-button left" disabled>&#9664;</button>
                            <div class="table-wrapper">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>Income</th>
                                            <th>Expenses</th>
                                            <th>Profit</th>
                                            <th>Egg Qty</th>
                                            <th>Egg Price</th>
                                            <th>Egg Income</th>
                                            <th>Culled Qty</th>
                                            <th>Culled Price</th>
                                            <th>Culled Income</th>
                                            <th>Feed Cost</th>
                                            <th>Chick Cost</th>
                                            <th>Medication Cost</th>
                                            <th>Labor Cost</th>
                                            <th>Transport Cost</th>
                                            <th>Trays Produced</th>
                                            <th>Trays Sold</th>
                                            <th>Trays Remaining</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% financialData.forEach(entry => { %>
                                            <tr class="date-filterable" data-date="<%= entry.date ? new Date(entry.date).getTime() : '' %>">
                                                <td><%= entry.date ? entry.date.toLocaleDateString() : 'N/A' %></td>
                                                <td><%= entry.totalIncome ? entry.totalIncome.toLocaleString() : '0' %></td>
                                                <td><%= entry.totalExpenses ? entry.totalExpenses.toLocaleString() : '0' %></td>
                                                <td><%= entry.profit ? entry.profit.toLocaleString() : '0' %></td>
                                                <td><%= entry.eggQty ? entry.eggQty.toLocaleString() : '0' %></td>
                                                <td><%= entry.eggPrice ? entry.eggPrice.toLocaleString() : '0' %></td>
                                                <td><%= entry.eggIncome ? entry.eggIncome.toLocaleString() : '0' %></td>
                                                <td><%= entry.culledQty ? entry.culledQty.toLocaleString() : '0' %></td>
                                                <td><%= entry.culledPrice ? entry.culledPrice.toLocaleString() : '0' %></td>
                                                <td><%= entry.culledIncome ? entry.culledIncome.toLocaleString() : '0' %></td>
                                                <td><%= entry.feedCost ? entry.feedCost.toLocaleString() : '0' %></td>
                                                <td><%= entry.chickCost ? entry.chickCost.toLocaleString() : '0' %></td>
                                                <td><%= entry.medicationCost ? entry.medicationCost.toLocaleString() : '0' %></td>
                                                <td><%= entry.laborCost ? entry.laborCost.toLocaleString() : '0' %></td>
                                                <td><%= entry.transportCost ? entry.transportCost.toLocaleString() : '0' %></td>
                                                <td><%= entry.traysProduced ? entry.traysProduced.toLocaleString() : '0' %></td>
                                                <td><%= entry.traysSold ? entry.traysSold.toLocaleString() : '0' %></td>
                                                <td><%= entry.traysRemaining ? entry.traysRemaining.toLocaleString() : '0' %></td>
                                            </tr>
                                        <% }) %>                       </tbody>
                                </table>
                            </div>
                            <button class="scroll-button right">&#9654;</button>
                        </div>
                    </div>
                </div>
                
                <!-- Financial Recommendations Section -->
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5><i class="fas fa-lightbulb"></i> Financial Insights</h5>
                    </div>
                    <div class="card-body">
                        <% 
                            // Calculate financial metrics
                            const totalIncome = financialData.reduce((sum, entry) => sum + entry.totalIncome, 0);
                            const totalExpenses = financialData.reduce((sum, entry) => sum + entry.totalExpenses, 0);
                            const profitMargin = ((totalIncome - totalExpenses) / totalIncome) * 100;
                            const avgDailyProfit = (totalIncome - totalExpenses) / financialData.length;
                            
                            // Calculate cost percentages
                            const feedPercentage = (financialData.reduce((sum, entry) => sum + entry.feedCost, 0) / totalExpenses) * 100;
                            const laborPercentage = (financialData.reduce((sum, entry) => sum + entry.laborCost, 0) / totalExpenses) * 100;
                            const medicationPercentage = (financialData.reduce((sum, entry) => sum + entry.medicationCost, 0) / totalExpenses) * 100;
                            
                            // Calculate tray metrics
                            const totalTraysProduced = financialData.reduce((sum, entry) => sum + entry.traysProduced, 0);
                            const totalTraysSold = financialData.reduce((sum, entry) => sum + entry.traysSold, 0);
                            const traySalesPercentage = (totalTraysSold / totalTraysProduced) * 100;
                        %>
                        
                        <div class="row mb-4">
                            <div class="col-md-4">
                                <div class="card h-100">
                                    <div class="card-header bg-info text-white">
                                        <strong>Income Summary</strong>
                                    </div>
                                    <div class="card-body">
                                        <p><strong>Total Income:</strong> <%= totalIncome.toLocaleString() %></p>
                                        <p><strong>Egg Income:</strong> <%= financialData.reduce((sum, entry) => sum + entry.eggIncome, 0).toLocaleString() %></p>
                                        <p><strong>Culled Income:</strong> <%= financialData.reduce((sum, entry) => sum + entry.culledIncome, 0).toLocaleString() %></p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card h-100">
                                    <div class="card-header bg-info text-white">
                                        <strong>Expense Summary</strong>
                                    </div>
                                    <div class="card-body">
                                        <p><strong>Total Expenses:</strong> <%= totalExpenses.toLocaleString() %></p>
                                        <p><strong>Feed Cost:</strong> <%= financialData.reduce((sum, entry) => sum + entry.feedCost, 0).toLocaleString() %></p>
                                        <p><strong>Labor Cost:</strong> <%= financialData.reduce((sum, entry) => sum + entry.laborCost, 0).toLocaleString() %></p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card h-100">
                                    <div class="card-header bg-info text-white">
                                        <strong>Performance Metrics</strong>
                                    </div>
                                    <div class="card-body">
                                        <p><strong>Profit Margin:</strong> <%= profitMargin.toFixed(2) %>%</p>
                                        <p><strong>Avg Daily Profit:</strong> <%= avgDailyProfit.toLocaleString() %></p>
                                        <p><strong>Tray Sales Rate:</strong> <%= traySalesPercentage.toFixed(2) %>%</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Cost Structure Analysis -->
                        <div class="mb-4">
                            <h6>Cost Structure Analysis</h6>
                            <div class="progress mb-2">
                                <div class="progress-bar bg-danger" style="width: <%= feedPercentage %>%" 
                                     title="Feed: <%= feedPercentage.toFixed(2) %>%">
                                    Feed
                                </div>
                                <div class="progress-bar bg-warning" style="width: <%= laborPercentage %>%" 
                                     title="Labor: <%= laborPercentage.toFixed(2) %>%">
                                    Labor
                                </div>
                                <div class="progress-bar bg-info" style="width: <%= medicationPercentage %>%" 
                                     title="Medication: <%= medicationPercentage.toFixed(2) %>%">
                                    Meds
                                </div>
                                <div class="progress-bar bg-success" style="width: <%= (100 - feedPercentage - laborPercentage - medicationPercentage).toFixed(2) %>%" 
                                     title="Other: <%= (100 - feedPercentage - laborPercentage - medicationPercentage).toFixed(2) %>%">
                                    Other
                                </div>
                            </div>
                            <small class="text-muted">
                                Feed <%= feedPercentage.toFixed(2) %>% | 
                                Labor <%= laborPercentage.toFixed(2) %>% | 
                                Meds <%= medicationPercentage.toFixed(2) %>% | 
                                Other <%= (100 - feedPercentage - laborPercentage - medicationPercentage).toFixed(2) %>%
                            </small>
                        </div>
                        
                        <!-- Recommendations -->
                        <div>
                            <h6>Recommendations</h6>
                            <% if (profitMargin < 15) { %>
                                <div class="alert alert-warning">
                                    <h6><i class="fas fa-exclamation-triangle"></i> Low Profit Margin (<%= profitMargin.toFixed(2) %>%%)</h6>
                                    <p>Your profit margin is below the recommended 15% threshold. Consider:</p>
                                    <ul>
                                        <% if (feedPercentage > 60) { %>
                                            <li>Feed costs make up <%= feedPercentage.toFixed(2) %>% of expenses - explore bulk purchasing or alternative suppliers</li>
                                        <% } %>
                                        <% if (laborPercentage > 25) { %>
                                            <li>Labor costs are high at <%= laborPercentage.toFixed(2) %>% - consider efficiency improvements</li>
                                        <% } %>
                                        <% if (medicationPercentage > 15) { %>
                                            <li>Medication costs are significant at <%= medicationPercentage.toFixed(2) %>% - review health management practices</li>
                                        <% } %>
                                        <li>Explore premium markets for your eggs to increase revenue</li>
                                        <li>Review pricing strategy for eggs and culled birds</li>
                                    </ul>
                                </div>
                            <% } %>
                            
                            <% if (traySalesPercentage < 90) { %>
                                <div class="alert alert-warning">
                                    <h6><i class="fas fa-exclamation-triangle"></i> Inventory Management</h6>
                                    <p>Only <%= traySalesPercentage.toFixed(2) %>% of produced trays were sold (<%= totalTraysSold %>/<%= totalTraysProduced %>).</p>
                                    <ul>
                                        <li>Review your sales channels and marketing strategies</li>
                                        <li>Consider offering promotions for older inventory</li>
                                        <li>Adjust production to better match demand</li>
                                    </ul>
                                </div>
                            <% } %>
                            
                            <% if (avgDailyProfit > 0 && profitMargin >= 15) { %>
                                <div class="alert alert-success">
                                    <h6><i class="fas fa-check-circle"></i> Healthy Financial Performance</h6>
                                    <p>Your batch is performing well with a <%= profitMargin.toFixed(2) %>% profit margin.</p>
                                    <ul>
                                        <li>Consider reinvesting profits in equipment upgrades</li>
                                        <li>Explore expanding production capacity</li>
                                        <li>Review opportunities for premium product lines</li>
                                    </ul>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% } else { %>
                <div class="alert alert-info">No financial data available for this batch.</div>
            <% } %>
        <% } else { %>
            <div class="alert alert-info">Select a batch or search to generate a report.</div>
        <% } %>
    </div>

    <!-- JavaScript -->
    <script>
        function logout() {
            alert("Logging out...");
            // Add your logout logic here
        }

        function filterBatches() {
            const input = document.getElementById('searchInput').value.toLowerCase();
            const options = document.querySelectorAll('#batchDropdown option');
            
            options.forEach(option => {
                const batchNo = option.textContent.toLowerCase();
                if (batchNo.includes(input)) {
                    option.style.display = 'block';
                } else {
                    option.style.display = 'none';
                }
            });
        }

        // Table scrolling functionality
        document.addEventListener('DOMContentLoaded', function() {
            const tableContainers = document.querySelectorAll('.table-container');
            
            tableContainers.forEach(container => {
                const wrapper = container.querySelector('.table-wrapper');
                const leftBtn = container.querySelector('.scroll-button.left');
                const rightBtn = container.querySelector('.scroll-button.right');
                
                // Check if scrolling is needed
                if (wrapper.scrollWidth > wrapper.clientWidth) {
                    // Enable scrolling buttons
                    wrapper.addEventListener('scroll', function() {
                        leftBtn.disabled = wrapper.scrollLeft === 0;
                        rightBtn.disabled = wrapper.scrollLeft >= (wrapper.scrollWidth - wrapper.clientWidth);
                    });
                    
                    leftBtn.addEventListener('click', function() {
                        wrapper.scrollBy({ left: -200, behavior: 'smooth' });
                    });
                    
                    rightBtn.addEventListener('click', function() {
                        wrapper.scrollBy({ left: 200, behavior: 'smooth' });
                    });
                } else {
                    // Hide buttons if no scrolling needed
                    leftBtn.style.display = 'none';
                    rightBtn.style.display = 'none';
                }
            });

            // Date Range Filter Functionality
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const quickRangeBtns = document.querySelectorAll('.quick-range-btn');
            const applyBtn = document.getElementById('applyDateRange');
            const resetBtn = document.getElementById('resetDateRange');
            
            // Set default end date to today
            if (endDateInput) {
                endDateInput.value = new Date().toISOString().split('T')[0];
            }
            
            // Quick range button handlers
            if (quickRangeBtns) {
                quickRangeBtns.forEach(btn => {
                    btn.addEventListener('click', function() {
                        // Remove active class from all buttons
                        quickRangeBtns.forEach(b => b.classList.remove('active'));
                        // Add active class to clicked button
                        this.classList.add('active');
                        
                        const today = new Date();
                        const endDate = new Date(today);
                        
                        if (this.dataset.days) {
                            const days = parseInt(this.dataset.days);
                            const startDate = new Date(today);
                            startDate.setDate(today.getDate() - days);
                            
                            startDateInput.value = startDate.toISOString().split('T')[0];
                            endDateInput.value = endDate.toISOString().split('T')[0];
                        } else if (this.dataset.range === 'all') {
                            startDateInput.value = '';
                            endDateInput.value = '';
                        }
                    });
                });
            }
            
            // Apply date range filter
            if (applyBtn) {
                applyBtn.addEventListener('click', function() {
                    const startDate = startDateInput.value ? new Date(startDateInput.value).getTime() : null;
                    const endDate = endDateInput.value ? new Date(endDateInput.value).getTime() : null;
                    
                    // Filter all date-filterable elements
                    document.querySelectorAll('.date-filterable').forEach(row => {
                        const rowDate = parseInt(row.dataset.date);
                        const shouldShow = 
                            (!startDate || rowDate >= startDate) && 
                            (!endDate || rowDate <= endDate);
                        
                        if (shouldShow) {
                            row.classList.remove('filtered-out');
                        } else {
                            row.classList.add('filtered-out');
                        }
                    });
                    
                    // Update analysis rows based on visible data
                    updateAnalysisAfterFilter();
                });
            }
            
            // Reset date range filter
            if (resetBtn) {
                resetBtn.addEventListener('click', function() {
                    startDateInput.value = '';
                    endDateInput.value = '';
                    
                    // Set "All Time" as active
                    quickRangeBtns.forEach(b => b.classList.remove('active'));
                    document.querySelector('.quick-range-btn[data-range="all"]').classList.add('active');
                    
                    // Show all rows
                    document.querySelectorAll('.date-filterable').forEach(row => {
                        row.classList.remove('filtered-out');
                    });
                    
                    // Restore original analysis
                    restoreOriginalAnalysis();
                });
            }
            
            // Ensure end date is not before start date
            if (startDateInput) {
                startDateInput.addEventListener('change', function() {
                    if (endDateInput.value && new Date(startDateInput.value) > new Date(endDateInput.value)) {
                        endDateInput.value = startDateInput.value;
                    }
                });
            }
            
            if (endDateInput) {
                endDateInput.addEventListener('change', function() {
                    if (startDateInput.value && new Date(endDateInput.value) < new Date(startDateInput.value)) {
                        startDateInput.value = endDateInput.value;
                    }
                });
            }
            
            // Store original analysis data
            const originalAnalysis = {};
            document.querySelectorAll('.analysis-row').forEach(row => {
                const key = row.closest('table').id || 'table-' + Math.random().toString(36).substr(2, 9);
                originalAnalysis[key] = row.innerHTML;
            });
            
            // Function to update analysis after filtering
            function updateAnalysisAfterFilter() {
                // This would need to be customized based on your specific analysis needs
                // For example, you might want to recalculate totals based on visible rows
                
                // For now, we'll just show/hide analysis rows with their parent tables
                document.querySelectorAll('.analysis-row').forEach(row => {
                    const tableBody = row.closest('tbody');
                    const visibleRows = tableBody.querySelectorAll('tr.date-filterable:not(.filtered-out)');
                    
                    if (visibleRows.length === 0) {
                        row.classList.add('filtered-out');
                    } else {
                        row.classList.remove('filtered-out');
                    }
                });
            }
            
            // Function to restore original analysis
            function restoreOriginalAnalysis() {
                for (const key in originalAnalysis) {
                    const row = document.querySelector(`#${key} .analysis-row`) || 
                                document.querySelector(`[data-table="${key}"] .analysis-row`);
                    if (row) {
                        row.innerHTML = originalAnalysis[key];
                    }
                }
            }
        });
    </script>
    <script src="/js/scripts.js"></script>
</body>
</html>